# Generated by Django 4.2.7 on 2025-07-23 23:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('notifications', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('false_alarm', 'Fausse alerte'), ('confirmed', 'Confirm√©e'), ('inappropriate', 'Inappropri√©e'), ('duplicate', 'Doublon'), ('resolved', 'R√©solue')], max_length=20)),
                ('reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunityAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('fire', 'Incendie üî•'), ('power_outage', "Coupure d'√©lectricit√© ‚ö°"), ('road_blocked', 'Route bloqu√©e üöß'), ('security', 'Agression ou s√©curit√© üö®'), ('medical', 'Urgence m√©dicale üè•'), ('flood', 'Inondation üåä'), ('gas_leak', 'Fuite de gaz ‚õΩ'), ('noise', 'Bruit excessif üîä'), ('vandalism', 'Vandalisme üé®'), ('other', 'Autre üìã')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('confirmed', 'Confirm√©e'), ('in_progress', 'En cours de traitement'), ('resolved', 'R√©solue'), ('false_alarm', 'Fausse alerte')], default='pending', max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('address', models.CharField(blank=True, max_length=500)),
                ('neighborhood', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=10)),
                ('reliability_score', models.FloatField(default=100.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('false_alarm_count', models.IntegerField(default=0)),
                ('verified_by_count', models.IntegerField(default=0)),
                ('help_offers_count', models.IntegerField(default=0)),
                ('images', models.JSONField(blank=True, default=list)),
                ('videos', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authored_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alerte Communautaire',
                'verbose_name_plural': 'Alertes Communautaires',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='notificationpreference',
            name='community_alert_notifications',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='notification',
            name='notification_type',
            field=models.CharField(choices=[('like', 'Like'), ('comment', 'Commentaire'), ('follow', 'Suivi'), ('live_started', 'Live d√©marr√©'), ('live_ended', 'Live termin√©'), ('mention', 'Mention'), ('post_shared', 'Post partag√©'), ('system', 'Syst√®me'), ('community_alert', 'Alerte Communautaire')], max_length=20),
        ),
        migrations.CreateModel(
            name='HelpOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_type', models.CharField(choices=[('physical_help', 'Aide physique'), ('information', 'Information'), ('transport', 'Transport'), ('medical', 'Aide m√©dicale'), ('technical', 'Aide technique'), ('other', 'Autre')], max_length=20)),
                ('description', models.TextField()),
                ('contact_info', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='help_offers_rel', to='notifications.communityalert')),
                ('helper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='help_offers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('alert', 'helper')},
            },
        ),
        migrations.AddField(
            model_name='communityalert',
            name='help_offers',
            field=models.ManyToManyField(related_name='offered_help_alerts', through='notifications.HelpOffer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communityalert',
            name='reported_by_users',
            field=models.ManyToManyField(related_name='reported_alerts', through='notifications.AlertReport', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communityalert',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AlertStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistic_type', models.CharField(choices=[('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('yearly', 'Annuel')], max_length=20)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('fire_count', models.IntegerField(default=0)),
                ('power_outage_count', models.IntegerField(default=0)),
                ('road_blocked_count', models.IntegerField(default=0)),
                ('security_count', models.IntegerField(default=0)),
                ('medical_count', models.IntegerField(default=0)),
                ('flood_count', models.IntegerField(default=0)),
                ('gas_leak_count', models.IntegerField(default=0)),
                ('noise_count', models.IntegerField(default=0)),
                ('vandalism_count', models.IntegerField(default=0)),
                ('other_count', models.IntegerField(default=0)),
                ('total_alerts', models.IntegerField(default=0)),
                ('resolved_alerts', models.IntegerField(default=0)),
                ('false_alarms', models.IntegerField(default=0)),
                ('avg_resolution_time_hours', models.FloatField(default=0.0)),
                ('neighborhoods_data', models.JSONField(blank=True, default=dict)),
                ('cities_data', models.JSONField(blank=True, default=dict)),
                ('avg_reliability_score', models.FloatField(default=0.0)),
                ('reliable_alerts_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-period_start'],
                'unique_together': {('statistic_type', 'period_start', 'period_end')},
            },
        ),
        migrations.AddField(
            model_name='alertreport',
            name='alert',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alertreports', to='notifications.communityalert'),
        ),
        migrations.AddField(
            model_name='alertreport',
            name='reporter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AlertNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('new_alert', 'Nouvelle alerte'), ('status_update', 'Mise √† jour statut'), ('help_needed', 'Aide demand√©e'), ('alert_resolved', 'Alerte r√©solue'), ('nearby_alert', 'Alerte √† proximit√©')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='notifications.communityalert')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='communityalert',
            index=models.Index(fields=['status', 'category'], name='notificatio_status_f0e8b4_idx'),
        ),
        migrations.AddIndex(
            model_name='communityalert',
            index=models.Index(fields=['created_at'], name='notificatio_created_b29009_idx'),
        ),
        migrations.AddIndex(
            model_name='communityalert',
            index=models.Index(fields=['latitude', 'longitude'], name='notificatio_latitud_759776_idx'),
        ),
        migrations.AddIndex(
            model_name='communityalert',
            index=models.Index(fields=['neighborhood', 'city'], name='notificatio_neighbo_1a91bf_idx'),
        ),
        migrations.AddIndex(
            model_name='communityalert',
            index=models.Index(fields=['reliability_score'], name='notificatio_reliabi_e4cee1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='alertreport',
            unique_together={('alert', 'reporter')},
        ),
        migrations.AddIndex(
            model_name='alertnotification',
            index=models.Index(fields=['recipient', 'is_read'], name='notificatio_recipie_12404a_idx'),
        ),
        migrations.AddIndex(
            model_name='alertnotification',
            index=models.Index(fields=['alert', 'notification_type'], name='notificatio_alert_i_267b73_idx'),
        ),
    ]

{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\mesProjets\\\\CommuniConnect\\\\frontend\\\\src\\\\components\\\\GeographicSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport { geographyAPI } from '../services/api';\nimport { MapPin, ChevronDown } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeographicSelector = ({\n  onSelectionChange,\n  initialValues = {}\n}) => {\n  _s();\n  var _quartiers$find, _communes$find, _prefectures$find, _geographicData$find;\n  const [selectedRegion, setSelectedRegion] = useState(initialValues.region_id || '');\n  const [selectedPrefecture, setSelectedPrefecture] = useState(initialValues.prefecture_id || '');\n  const [selectedCommune, setSelectedCommune] = useState(initialValues.commune_id || '');\n  const [selectedQuartier, setSelectedQuartier] = useState(initialValues.quartier_id || '');\n\n  // Récupérer les données géographiques\n  const {\n    data: geographicData,\n    isLoading: isLoadingGeographic\n  } = useQuery(['geographic-data'], geographyAPI.getGeographicData, {\n    staleTime: 5 * 60 * 1000 // 5 minutes\n  });\n\n  // Récupérer les préfectures quand une région est sélectionnée\n  const {\n    data: prefectures,\n    isLoading: isLoadingPrefectures\n  } = useQuery(['prefectures', selectedRegion], () => geographyAPI.getPrefectures(selectedRegion), {\n    enabled: !!selectedRegion,\n    staleTime: 5 * 60 * 1000\n  });\n\n  // Récupérer les communes quand une préfecture est sélectionnée\n  const {\n    data: communes,\n    isLoading: isLoadingCommunes\n  } = useQuery(['communes', selectedPrefecture], () => geographyAPI.getCommunes(selectedPrefecture), {\n    enabled: !!selectedPrefecture,\n    staleTime: 5 * 60 * 1000\n  });\n\n  // Récupérer les quartiers quand une commune est sélectionnée\n  const {\n    data: quartiers,\n    isLoading: isLoadingQuartiers\n  } = useQuery(['quartiers', selectedCommune], () => geographyAPI.getQuartiers(selectedCommune), {\n    enabled: !!selectedCommune,\n    staleTime: 5 * 60 * 1000\n  });\n\n  // Réinitialiser les sélections quand un niveau supérieur change\n  useEffect(() => {\n    if (selectedRegion !== initialValues.region_id) {\n      setSelectedPrefecture('');\n      setSelectedCommune('');\n      setSelectedQuartier('');\n    }\n  }, [selectedRegion, initialValues.region_id]);\n  useEffect(() => {\n    if (selectedPrefecture !== initialValues.prefecture_id) {\n      setSelectedCommune('');\n      setSelectedQuartier('');\n    }\n  }, [selectedPrefecture, initialValues.prefecture_id]);\n  useEffect(() => {\n    if (selectedCommune !== initialValues.commune_id) {\n      setSelectedQuartier('');\n    }\n  }, [selectedCommune, initialValues.commune_id]);\n\n  // Notifier le parent des changements de sélection\n  useEffect(() => {\n    onSelectionChange({\n      region_id: selectedRegion,\n      prefecture_id: selectedPrefecture,\n      commune_id: selectedCommune,\n      quartier_id: selectedQuartier\n    });\n  }, [selectedRegion, selectedPrefecture, selectedCommune, selectedQuartier, onSelectionChange]);\n  if (isLoadingGeographic) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2 text-gray-600\",\n        children: \"Chargement des donn\\xE9es g\\xE9ographiques...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(MapPin, {\n        className: \"w-5 h-5 text-primary-600 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900\",\n        children: \"S\\xE9lectionnez votre localisation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"geographic-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"R\\xE9gion \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedRegion,\n            onChange: e => setSelectedRegion(e.target.value),\n            className: \"geographic-select\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"S\\xE9lectionnez une r\\xE9gion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), geographicData === null || geographicData === void 0 ? void 0 : geographicData.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: region.id,\n              children: region.nom\n            }, region.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n            className: \"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"Pr\\xE9fecture \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedPrefecture,\n            onChange: e => setSelectedPrefecture(e.target.value),\n            className: \"geographic-select\",\n            disabled: !selectedRegion || isLoadingPrefectures,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: isLoadingPrefectures ? 'Chargement...' : 'Sélectionnez une préfecture'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), prefectures === null || prefectures === void 0 ? void 0 : prefectures.map(prefecture => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: prefecture.id,\n              children: prefecture.nom\n            }, prefecture.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n            className: \"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"Commune \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCommune,\n            onChange: e => setSelectedCommune(e.target.value),\n            className: \"geographic-select\",\n            disabled: !selectedPrefecture || isLoadingCommunes,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: isLoadingCommunes ? 'Chargement...' : 'Sélectionnez une commune'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), communes === null || communes === void 0 ? void 0 : communes.map(commune => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: commune.id,\n              children: [commune.nom, \" (\", commune.type, \")\"]\n            }, commune.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n            className: \"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"Quartier \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedQuartier,\n            onChange: e => setSelectedQuartier(e.target.value),\n            className: \"geographic-select\",\n            disabled: !selectedCommune || isLoadingQuartiers,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: isLoadingQuartiers ? 'Chargement...' : 'Sélectionnez un quartier'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), quartiers === null || quartiers === void 0 ? void 0 : quartiers.map(quartier => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: quartier.id,\n              children: quartier.nom\n            }, quartier.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n            className: \"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), selectedQuartier && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-green-50 border border-green-200 rounded-md\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(MapPin, {\n          className: \"w-4 h-4 text-green-600 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-green-800\",\n          children: [\"Localisation s\\xE9lectionn\\xE9e :\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [quartiers === null || quartiers === void 0 ? void 0 : (_quartiers$find = quartiers.find(q => q.id == selectedQuartier)) === null || _quartiers$find === void 0 ? void 0 : _quartiers$find.nom, \",\", ' ', communes === null || communes === void 0 ? void 0 : (_communes$find = communes.find(c => c.id == selectedCommune)) === null || _communes$find === void 0 ? void 0 : _communes$find.nom, \",\", ' ', prefectures === null || prefectures === void 0 ? void 0 : (_prefectures$find = prefectures.find(p => p.id == selectedPrefecture)) === null || _prefectures$find === void 0 ? void 0 : _prefectures$find.nom, \",\", ' ', geographicData === null || geographicData === void 0 ? void 0 : (_geographicData$find = geographicData.find(r => r.id == selectedRegion)) === null || _geographicData$find === void 0 ? void 0 : _geographicData$find.nom]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-md\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-blue-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Important :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), \" Cette s\\xE9lection est obligatoire pour confirmer votre r\\xE9sidence en Guin\\xE9e. Seuls les r\\xE9sidents de Guin\\xE9e peuvent s'inscrire sur CommuniConnect.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(GeographicSelector, \"QECEeMGoevZP9k9zcF4h0hwrfIg=\", false, function () {\n  return [useQuery, useQuery, useQuery, useQuery];\n});\n_c = GeographicSelector;\nexport default GeographicSelector;\nvar _c;\n$RefreshReg$(_c, \"GeographicSelector\");","map":{"version":3,"names":["React","useState","useEffect","useQuery","geographyAPI","MapPin","ChevronDown","jsxDEV","_jsxDEV","GeographicSelector","onSelectionChange","initialValues","_s","_quartiers$find","_communes$find","_prefectures$find","_geographicData$find","selectedRegion","setSelectedRegion","region_id","selectedPrefecture","setSelectedPrefecture","prefecture_id","selectedCommune","setSelectedCommune","commune_id","selectedQuartier","setSelectedQuartier","quartier_id","data","geographicData","isLoading","isLoadingGeographic","getGeographicData","staleTime","prefectures","isLoadingPrefectures","getPrefectures","enabled","communes","isLoadingCommunes","getCommunes","quartiers","isLoadingQuartiers","getQuartiers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","required","map","region","id","nom","disabled","prefecture","commune","type","quartier","find","q","c","p","r","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/mesProjets/CommuniConnect/frontend/src/components/GeographicSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { geographyAPI } from '../services/api';\r\nimport { MapPin, ChevronDown } from 'lucide-react';\r\n\r\nconst GeographicSelector = ({ onSelectionChange, initialValues = {} }) => {\r\n  const [selectedRegion, setSelectedRegion] = useState(initialValues.region_id || '');\r\n  const [selectedPrefecture, setSelectedPrefecture] = useState(initialValues.prefecture_id || '');\r\n  const [selectedCommune, setSelectedCommune] = useState(initialValues.commune_id || '');\r\n  const [selectedQuartier, setSelectedQuartier] = useState(initialValues.quartier_id || '');\r\n\r\n  // Récupérer les données géographiques\r\n  const { data: geographicData, isLoading: isLoadingGeographic } = useQuery(\r\n    ['geographic-data'],\r\n    geographyAPI.getGeographicData,\r\n    {\r\n      staleTime: 5 * 60 * 1000, // 5 minutes\r\n    }\r\n  );\r\n\r\n  // Récupérer les préfectures quand une région est sélectionnée\r\n  const { data: prefectures, isLoading: isLoadingPrefectures } = useQuery(\r\n    ['prefectures', selectedRegion],\r\n    () => geographyAPI.getPrefectures(selectedRegion),\r\n    {\r\n      enabled: !!selectedRegion,\r\n      staleTime: 5 * 60 * 1000,\r\n    }\r\n  );\r\n\r\n  // Récupérer les communes quand une préfecture est sélectionnée\r\n  const { data: communes, isLoading: isLoadingCommunes } = useQuery(\r\n    ['communes', selectedPrefecture],\r\n    () => geographyAPI.getCommunes(selectedPrefecture),\r\n    {\r\n      enabled: !!selectedPrefecture,\r\n      staleTime: 5 * 60 * 1000,\r\n    }\r\n  );\r\n\r\n  // Récupérer les quartiers quand une commune est sélectionnée\r\n  const { data: quartiers, isLoading: isLoadingQuartiers } = useQuery(\r\n    ['quartiers', selectedCommune],\r\n    () => geographyAPI.getQuartiers(selectedCommune),\r\n    {\r\n      enabled: !!selectedCommune,\r\n      staleTime: 5 * 60 * 1000,\r\n    }\r\n  );\r\n\r\n  // Réinitialiser les sélections quand un niveau supérieur change\r\n  useEffect(() => {\r\n    if (selectedRegion !== initialValues.region_id) {\r\n      setSelectedPrefecture('');\r\n      setSelectedCommune('');\r\n      setSelectedQuartier('');\r\n    }\r\n  }, [selectedRegion, initialValues.region_id]);\r\n\r\n  useEffect(() => {\r\n    if (selectedPrefecture !== initialValues.prefecture_id) {\r\n      setSelectedCommune('');\r\n      setSelectedQuartier('');\r\n    }\r\n  }, [selectedPrefecture, initialValues.prefecture_id]);\r\n\r\n  useEffect(() => {\r\n    if (selectedCommune !== initialValues.commune_id) {\r\n      setSelectedQuartier('');\r\n    }\r\n  }, [selectedCommune, initialValues.commune_id]);\r\n\r\n  // Notifier le parent des changements de sélection\r\n  useEffect(() => {\r\n    onSelectionChange({\r\n      region_id: selectedRegion,\r\n      prefecture_id: selectedPrefecture,\r\n      commune_id: selectedCommune,\r\n      quartier_id: selectedQuartier,\r\n    });\r\n  }, [selectedRegion, selectedPrefecture, selectedCommune, selectedQuartier, onSelectionChange]);\r\n\r\n  if (isLoadingGeographic) {\r\n    return (\r\n      <div className=\"flex items-center justify-center p-8\">\r\n        <div className=\"spinner\"></div>\r\n        <span className=\"ml-2 text-gray-600\">Chargement des données géographiques...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex items-center mb-4\">\r\n        <MapPin className=\"w-5 h-5 text-primary-600 mr-2\" />\r\n        <h3 className=\"text-lg font-semibold text-gray-900\">\r\n          Sélectionnez votre localisation\r\n        </h3>\r\n      </div>\r\n\r\n      <div className=\"geographic-selector\">\r\n        {/* Sélection de la région */}\r\n        <div>\r\n          <label className=\"form-label\">\r\n            Région <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <div className=\"relative\">\r\n            <select\r\n              value={selectedRegion}\r\n              onChange={(e) => setSelectedRegion(e.target.value)}\r\n              className=\"geographic-select\"\r\n              required\r\n            >\r\n              <option value=\"\">Sélectionnez une région</option>\r\n              {geographicData?.map((region) => (\r\n                <option key={region.id} value={region.id}>\r\n                  {region.nom}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Sélection de la préfecture */}\r\n        <div>\r\n          <label className=\"form-label\">\r\n            Préfecture <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <div className=\"relative\">\r\n            <select\r\n              value={selectedPrefecture}\r\n              onChange={(e) => setSelectedPrefecture(e.target.value)}\r\n              className=\"geographic-select\"\r\n              disabled={!selectedRegion || isLoadingPrefectures}\r\n              required\r\n            >\r\n              <option value=\"\">\r\n                {isLoadingPrefectures ? 'Chargement...' : 'Sélectionnez une préfecture'}\r\n              </option>\r\n              {prefectures?.map((prefecture) => (\r\n                <option key={prefecture.id} value={prefecture.id}>\r\n                  {prefecture.nom}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Sélection de la commune */}\r\n        <div>\r\n          <label className=\"form-label\">\r\n            Commune <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <div className=\"relative\">\r\n            <select\r\n              value={selectedCommune}\r\n              onChange={(e) => setSelectedCommune(e.target.value)}\r\n              className=\"geographic-select\"\r\n              disabled={!selectedPrefecture || isLoadingCommunes}\r\n              required\r\n            >\r\n              <option value=\"\">\r\n                {isLoadingCommunes ? 'Chargement...' : 'Sélectionnez une commune'}\r\n              </option>\r\n              {communes?.map((commune) => (\r\n                <option key={commune.id} value={commune.id}>\r\n                  {commune.nom} ({commune.type})\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Sélection du quartier */}\r\n        <div>\r\n          <label className=\"form-label\">\r\n            Quartier <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <div className=\"relative\">\r\n            <select\r\n              value={selectedQuartier}\r\n              onChange={(e) => setSelectedQuartier(e.target.value)}\r\n              className=\"geographic-select\"\r\n              disabled={!selectedCommune || isLoadingQuartiers}\r\n              required\r\n            >\r\n              <option value=\"\">\r\n                {isLoadingQuartiers ? 'Chargement...' : 'Sélectionnez un quartier'}\r\n              </option>\r\n              {quartiers?.map((quartier) => (\r\n                <option key={quartier.id} value={quartier.id}>\r\n                  {quartier.nom}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Informations sur la sélection */}\r\n      {selectedQuartier && (\r\n        <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-md\">\r\n          <div className=\"flex items-center\">\r\n            <MapPin className=\"w-4 h-4 text-green-600 mr-2\" />\r\n            <span className=\"text-sm text-green-800\">\r\n              Localisation sélectionnée :{' '}\r\n              <strong>\r\n                {quartiers?.find(q => q.id == selectedQuartier)?.nom},{' '}\r\n                {communes?.find(c => c.id == selectedCommune)?.nom},{' '}\r\n                {prefectures?.find(p => p.id == selectedPrefecture)?.nom},{' '}\r\n                {geographicData?.find(r => r.id == selectedRegion)?.nom}\r\n              </strong>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Message d'aide */}\r\n      <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-md\">\r\n        <p className=\"text-sm text-blue-800\">\r\n          <strong>Important :</strong> Cette sélection est obligatoire pour confirmer votre résidence en Guinée. \r\n          Seuls les résidents de Guinée peuvent s'inscrire sur CommuniConnect.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeographicSelector; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
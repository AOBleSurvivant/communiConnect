{"ast":null,"code":"import api from './api';\n\n// Service pour les posts\nexport const postsAPI = {\n  // Récupérer tous les posts\n  getPosts: async (params = {}) => {\n    const response = await api.get('/posts/', {\n      params\n    });\n    return response.data;\n  },\n  // Récupérer un post spécifique\n  getPost: async postId => {\n    const response = await api.get(`/posts/${postId}/`);\n    return response.data;\n  },\n  // Créer un nouveau post\n  createPost: async postData => {\n    const response = await api.post('/posts/', postData);\n    return response.data;\n  },\n  // Modifier un post\n  updatePost: async (postId, postData) => {\n    const response = await api.put(`/posts/${postId}/`, postData);\n    return response.data;\n  },\n  // Supprimer un post\n  deletePost: async postId => {\n    const response = await api.delete(`/posts/${postId}/`);\n    return response.data;\n  },\n  // Liker/unliker un post\n  likePost: async postId => {\n    const response = await api.post(`/posts/${postId}/like/`);\n    return response.data;\n  },\n  // Unliker un post\n  unlikePost: async postId => {\n    const response = await api.delete(`/posts/${postId}/like/`);\n    return response.data;\n  },\n  // Récupérer les commentaires d'un post\n  getComments: async postId => {\n    const response = await api.get(`/posts/${postId}/comments/`);\n    return response.data;\n  },\n  // Ajouter un commentaire\n  addComment: async (postId, commentData) => {\n    const response = await api.post(`/posts/${postId}/comments/`, commentData);\n    return response.data;\n  },\n  // Modifier un commentaire\n  updateComment: async (commentId, commentData) => {\n    const response = await api.put(`/posts/comments/${commentId}/`, commentData);\n    return response.data;\n  },\n  // Supprimer un commentaire\n  deleteComment: async commentId => {\n    const response = await api.delete(`/posts/comments/${commentId}/`);\n    return response.data;\n  },\n  // Récupérer les posts d'un utilisateur\n  getUserPosts: async userId => {\n    const response = await api.get(`/posts/user/${userId}/`);\n    return response.data;\n  },\n  // Incrémenter les vues d'un post\n  incrementViews: async postId => {\n    const response = await api.post(`/posts/${postId}/increment-views/`);\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","postsAPI","getPosts","params","response","get","data","getPost","postId","createPost","postData","post","updatePost","put","deletePost","delete","likePost","unlikePost","getComments","addComment","commentData","updateComment","commentId","deleteComment","getUserPosts","userId","incrementViews"],"sources":["C:/Users/DELL/Documents/mesProjets/CommuniConnect/frontend/src/services/postsAPI.js"],"sourcesContent":["import api from './api';\r\n\r\n// Service pour les posts\r\nexport const postsAPI = {\r\n  // Récupérer tous les posts\r\n  getPosts: async (params = {}) => {\r\n    const response = await api.get('/posts/', { params });\r\n    return response.data;\r\n  },\r\n\r\n  // Récupérer un post spécifique\r\n  getPost: async (postId) => {\r\n    const response = await api.get(`/posts/${postId}/`);\r\n    return response.data;\r\n  },\r\n\r\n  // Créer un nouveau post\r\n  createPost: async (postData) => {\r\n    const response = await api.post('/posts/', postData);\r\n    return response.data;\r\n  },\r\n\r\n  // Modifier un post\r\n  updatePost: async (postId, postData) => {\r\n    const response = await api.put(`/posts/${postId}/`, postData);\r\n    return response.data;\r\n  },\r\n\r\n  // Supprimer un post\r\n  deletePost: async (postId) => {\r\n    const response = await api.delete(`/posts/${postId}/`);\r\n    return response.data;\r\n  },\r\n\r\n  // Liker/unliker un post\r\n  likePost: async (postId) => {\r\n    const response = await api.post(`/posts/${postId}/like/`);\r\n    return response.data;\r\n  },\r\n\r\n  // Unliker un post\r\n  unlikePost: async (postId) => {\r\n    const response = await api.delete(`/posts/${postId}/like/`);\r\n    return response.data;\r\n  },\r\n\r\n  // Récupérer les commentaires d'un post\r\n  getComments: async (postId) => {\r\n    const response = await api.get(`/posts/${postId}/comments/`);\r\n    return response.data;\r\n  },\r\n\r\n  // Ajouter un commentaire\r\n  addComment: async (postId, commentData) => {\r\n    const response = await api.post(`/posts/${postId}/comments/`, commentData);\r\n    return response.data;\r\n  },\r\n\r\n  // Modifier un commentaire\r\n  updateComment: async (commentId, commentData) => {\r\n    const response = await api.put(`/posts/comments/${commentId}/`, commentData);\r\n    return response.data;\r\n  },\r\n\r\n  // Supprimer un commentaire\r\n  deleteComment: async (commentId) => {\r\n    const response = await api.delete(`/posts/comments/${commentId}/`);\r\n    return response.data;\r\n  },\r\n\r\n  // Récupérer les posts d'un utilisateur\r\n  getUserPosts: async (userId) => {\r\n    const response = await api.get(`/posts/user/${userId}/`);\r\n    return response.data;\r\n  },\r\n\r\n  // Incrémenter les vues d'un post\r\n  incrementViews: async (postId) => {\r\n    const response = await api.post(`/posts/${postId}/increment-views/`);\r\n    return response.data;\r\n  },\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}